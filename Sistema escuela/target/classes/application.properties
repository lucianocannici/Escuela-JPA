#configuracion de Spring Security (cambie nombre y contrase침a)
spring.security.user.name: root
spring.security.user.password: root

#Configuracion de tomcat (si el puerto esta ocupado cambio el numero, ademas por seguridad conviene poner uno que no sea tan comun como 8080)
server.port: 8095
# los puertos que estan por debajo del 1024 son los que usa el sistema operativo (el 80 lo usa el servidor apache) porque son mas seguros
# entonces se desarolla en un puerto alto, y cuando lo paso a produccion lo puedo pasar a 80 por ejemplo

#ahora NO tengo que crear el archivo Connector, lo va a manejar spring data
#configuracion MariaDB - MySQL
# spring.datasource.url: jdbc:mariadb://localhost:3006/escuela
# spring.datasource.username: root
# spring.datasource.password:
# todo bien, pero vamos a usar H2 para que pueda usar cualquier base de datos

# Configuraci칩n de BD H2 y JPA                  
spring.datasource.url: jdbc:h2:file:./data/escuela;DB_CLOSE_ON_EXIT=FALSE  
#spring.datasource.url: jdbc:h2:file:~/d  ata/escuela;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url: jdbc:h2:mem/escuela;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username: root
spring.datasource.password: root
#igual, a partir de JAVA9 no hace falta mostrar el driver. al ponerlo en la url ya esta ok
# si ponemos MEM todo se guarda en la memoria de la pc, cuando la reinicio se borra todo. esta bueno para test pero NO para produccion

#Estrategia DDL:                - none(Sin acci칩n) (tendria que entrar al SQL e ingresar las tablas, no quiero hacer esto)
#                               - create (Reinicia la BD en cada ejecuci칩n) (esta bueno, creo las clases, entidades y no tengo que crear las tablas en sql. Si existe las entidades ya automaticamente se crean las tablas. Lo que tiene de malo es que cada vez que reinicio la pc se pierte todos los datos)
#                               - update(Si no existe lo crea, si existe lo mantiene) (aunque reinicie se mantiene la tabla hecha)
#spring.jpa.hibernate.ddl-auto: none
#spring.jpa.hibernate.ddl-auto: create
spring.jpa.hibernate.ddl-auto: update